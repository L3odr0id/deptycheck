1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> {auto conArg : ((arg : Fuel) -> Gen String)} -> {auto conArg : ((arg : Fuel) -> Gen Nat)} -> Gen X
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg ^outmost-fuel^ : IVar Data.Fuel.Fuel)
    => (MW AutoImplicit external^<String>[] : IPi.  (MW ExplicitArg {arg:842} : IVar Data.Fuel.Fuel)
                                                 -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                         $ IPrimVal String))
    => (MW AutoImplicit external^<Prelude.Types.Nat>[] : IPi.  (MW ExplicitArg {arg:849} : IVar Data.Fuel.Fuel)
                                                            -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                                    $ IVar Prelude.Types.Nat))
    => ILocal (IApp. IVar <DerivedGen.X>[] $ IVar ^outmost-fuel^)
         IClaim MW
                Export
                []
                (MkTy <Builtin.Pair>[0, 1]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (MW ExplicitArg {arg:22} : IType)
                          -> (MW ExplicitArg {arg:26} : IType)
                          -> (MW AutoImplicit : IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                                   -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                           $ IVar {arg:22}))
                          -> (MW AutoImplicit : IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                                   -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                           $ IVar {arg:26}))
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.Pair
                                         $ IVar {arg:22}
                                         $ IVar {arg:26}))))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.X>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar DerivedGen.X)))
         IDef <Builtin.Pair>[0, 1]
              [ PatClause (IApp. IVar <Builtin.Pair>[0, 1]
                               $ IBindVar ^fuel_arg^
                               $ IBindVar {arg:22}
                               $ IBindVar {arg:26})
                          (ILocal (ICase (IVar ^fuel_arg^)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar <<Builtin.MkPair>>
                                                                        $ IVar Data.Fuel.Dry
                                                                        $ IVar {arg:22}
                                                                        $ IVar {arg:26})
                                                                 $ IVar Nil))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar ^sub^fuel_arg^)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar <<Builtin.MkPair>>
                                                                        $ IVar ^sub^fuel_arg^
                                                                        $ IVar {arg:22}
                                                                        $ IVar {arg:26})
                                                                 $ IVar Nil)) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<Builtin.MkPair>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:22} : IType)
                                             -> (MW ExplicitArg {arg:26} : IType)
                                             -> (MW AutoImplicit : IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                                                      -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                                              $ IVar {arg:22}))
                                             -> (MW AutoImplicit : IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                                                      -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                                              $ IVar {arg:26}))
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.Pair
                                                            $ IVar {arg:22}
                                                            $ IVar {arg:26}))))
                            IDef <<Builtin.MkPair>>
                                 [ PatClause (IApp. IVar <<Builtin.MkPair>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ IBindVar a
                                                  $ IBindVar b)
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf
                                                  $ (IApp. IVar ::
                                                         $ (IApp. IVar >>=
                                                                $ ILet MW
                                                                       ^summoned_poly_gen^{arg:22}
                                                                       (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                                                           -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                                                   $ IVar {arg:22}))
                                                                       (ISearch 50)
                                                                       (IApp. IVar ^summoned_poly_gen^{arg:22}
                                                                            $ IVar ^cons_fuel^)
                                                                $ (ILam.  (MW ExplicitArg x : Implicit False)
                                                                       => (IApp. IVar >>=
                                                                               $ ILet MW
                                                                                      ^summoned_poly_gen^{arg:26}
                                                                                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                                                                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                                                                  $ IVar {arg:26}))
                                                                                      (ISearch 50)
                                                                                      (IApp. IVar ^summoned_poly_gen^{arg:26}
                                                                                           $ IVar ^cons_fuel^)
                                                                               $ (ILam.  (MW ExplicitArg y : Implicit False)
                                                                                      => (IApp. (INamedApp. IVar Prelude.pure
                                                                                                          $ IVar Test.DepTyCheck.Gen.Gen)
                                                                                              $ (IApp. (INamedApp. IVar Builtin.MkPair
                                                                                                                 $ IVar a
                                                                                                                 $ IVar b)
                                                                                                     $ IVar x
                                                                                                     $ IVar y))))))
                                                         $ IVar Nil)) ] ]
         IDef <DerivedGen.X>[]
              [ PatClause (IApp. IVar <DerivedGen.X>[] $ IBindVar ^fuel_arg^)
                          (ILocal (ICase (IVar ^fuel_arg^)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar <<DerivedGen.MkX>>
                                                                        $ IVar Data.Fuel.Dry)
                                                                 $ IVar Nil))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar ^sub^fuel_arg^)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar <<DerivedGen.MkX>>
                                                                        $ IVar ^sub^fuel_arg^)
                                                                 $ IVar Nil)) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkX>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar DerivedGen.X)))
                            IDef <<DerivedGen.MkX>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkX>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar Test.DepTyCheck.Gen.oneOf
                                                  $ (IApp. IVar ::
                                                         $ (IApp. IVar >>=
                                                                $ (IApp. IVar <Builtin.Pair>[0, 1]
                                                                       $ IVar ^cons_fuel^
                                                                       $ IPrimVal String
                                                                       $ (IApp. IVar Builtin.Pair
                                                                              $ IVar Prelude.Types.Nat
                                                                              $ IPrimVal String))
                                                                $ (ILam.  (MW ExplicitArg ^bnd^{arg:832} : Implicit False)
                                                                       => (IApp. (INamedApp. IVar Prelude.pure
                                                                                           $ IVar Test.DepTyCheck.Gen.Gen)
                                                                               $ (IApp. IVar DerivedGen.MkX
                                                                                      $ IVar ^bnd^{arg:832}))))
                                                         $ IVar Nil)) ] ]
